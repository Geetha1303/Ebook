

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      volumes:
      - name: opa-config-vol
        configMap:
          name: opa-istio-config
      containers:
      - name: opa
        image: openpolicyagent/opa:0.42.2-envoy-rootless
        volumeMounts:
        - readOnly: true
          mountPath: /config
          name: opa-config-vol
        livenessProbe:
            httpGet:
              path: /health
              scheme: HTTP
              port: 8282
            initialDelaySeconds: 5    # Tune these periods for your environemnt
            periodSeconds: 5
        readinessProbe:
             httpGet:
               path: /health?bundle=true # Include bundle activation in readiness
               scheme: HTTP
               port: 8282
             initialDelaySeconds: 5
             periodSeconds: 5
        args:
          - "run"
          - "--server"
          - "--ignore=.*"
          - "--config-file=/config/conf.yaml"
          - "--authorization=basic"
          - "--addr=http://127.0.0.1:8181"
          - "--diagnostic-addr=0.0.0.0:8282"
  containers:
        - name: frontend
          image: sreenathkk96/rnp-frontend:0.0.1
          stdin: true
          ports:
            - containerPort: 3000
          env:
            - name: BACKEND_URL
              value: http://backend-service:8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  selector:
    matchLabels:
      component: backend
  template:
    metadata:
      labels:
        component: backend
    spec:
      volumes:
      - name: opa-config-vol
        configMap:
          name: opa-istio-config
      containers:
      - name: opa
        image: openpolicyagent/opa:0.42.2-envoy-rootless
        volumeMounts:
        - readOnly: true
          mountPath: /config
          name: opa-config-vol
        livenessProbe:
            httpGet:
              path: /health
              scheme: HTTP
              port: 8282
            initialDelaySeconds: 5    # Tune these periods for your environemnt
            periodSeconds: 5
        readinessProbe:
             httpGet:
               path: /health?bundle=true # Include bundle activation in readiness
               scheme: HTTP
               port: 8282
             initialDelaySeconds: 5
             periodSeconds: 5
        args:
          - "run"
          - "--server"
          - "--ignore=.*"
          - "--config-file=/config/conf.yaml"
          - "--authorization=basic"
          - "--addr=http://127.0.0.1:8181"
          - "--diagnostic-addr=0.0.0.0:8282"
  containers:
        - name: backend
          image: sreenathkk96/rnp-backend:0.0.1
          ports:
            - containerPort: 8080
          env:
            - name: USERNAME
              value: postgres
            - name: HOST
              value: postgres-service
            - name: DATABASE
              value: loizenaidb
            - name: PASSWORD
              value: Postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: postgres
  template:
    metadata:
      labels:
        component: postgres
    spec:
      volumes:
      - name: opa-config-vol
        configMap:
          name: opa-istio-config
      containers:
      - name: opa
        image: openpolicyagent/opa:0.42.2-envoy-rootless
        volumeMounts:
        - readOnly: true
          mountPath: /config
          name: opa-config-vol
        livenessProbe:
            httpGet:
              path: /health
              scheme: HTTP
              port: 8282
            initialDelaySeconds: 5    # Tune these periods for your environemnt
            periodSeconds: 5
        readinessProbe:
             httpGet:
               path: /health?bundle=true # Include bundle activation in readiness
               scheme: HTTP
               port: 8282
             initialDelaySeconds: 5
             periodSeconds: 5
        args:
          - "run"
          - "--server"
          - "--ignore=.*"
          - "--config-file=/config/conf.yaml"
          - "--authorization=basic"
          - "--addr=http://127.0.0.1:8181"
          - "--diagnostic-addr=0.0.0.0:8282"
  containers:
        - name: postgres
          image: postgres
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: Postgres
            - name: POSTGRES_DB
              value: loizenaidb
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  labels:
    app: frontend
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app: frontend
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  type: ClusterIP
  selector:
    component: backend
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
---

apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  type: ClusterIP
  selector:
    component: postgres
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
---
